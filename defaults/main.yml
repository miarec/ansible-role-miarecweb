---
# Version of MiaRecWeb files to install
miarecweb_version: 5.2.0.2119

# The python version to install miarecweb. Caution! The python should be installed in advance
# python_version: 3.6.3
# Location of the installed python files
python_install_dir: /usr/local


# Vesion of PostgreSQL and location of its binaries
# This is required for locating of 'pg_config' binary.
# See also an override of 'postgresq_bin_directory' in 'vars' folder
postgresql_version: 9.3
postgresql_bin_directory: /usr/bin


# ----------------------------
# Database settings
# ----------------------------
miarecweb_db_host: 127.0.0.1
miarecweb_db_port: 5432
miarecweb_db_name: miarecdb
miarecweb_db_user: miarec
miarecweb_db_password: password

miarecweb_db_pool_size: 20
miarecweb_db_pool_recycle: -1
miarecweb_db_pool_use_lifo: true

# -----------------------------
# Redis settings
# -----------------------------
miarecweb_redis_host: 127.0.0.1
miarecweb_redis_port: 6379

miarecweb_redis_socket_timeout: 60
miarecweb_redis_socket_connect_timeout: 60
miarecweb_redis_socket_keepalive: true
miarecweb_redis_health_check_interval: 300
miarecweb_redis_pool_recycle: -1


# A secret key used for encrypting secrets in the database.
# If the secret changes or is unknown, no encrypted fields in the database will be accessible.
# It must be unique for each deployment, but stay the same between software updates
miarecweb_secret:

# -----------------------------
# Optional components
# -----------------------------
miarecweb_upgrade_db: true
miarecweb_upgrade_db_once: true
miarecweb_install_apache: true
miarecweb_install_celeryd: true
miarecweb_install_celerybeat: true

miarecweb_force_https: true


# -----------------------------
# MiaRec user group
# Multiple processes (miarec, apache, celery) require "write" access to the same data (recording files)
# - miarec recorder creates audio files
# - celery purges audio files when user requests or due to retention policy
# - apache creates audio files during replication process
# We assume that the recording files are stored into directory owned by "miarec" group
# Then we add users "miarec", "celery" and "httpd/www-data" to that group.
# -----------------------------
miarec_bin_group: root

# -----------------------------
# Installation folder structure:
# -----------------------------
#   root:
#      releases:
#          - 1.0.0.100
#          - 2.0.1.200
#          - 3.1.2.5
#      shared:
#          - data1
#          - data2
#      current: -> releases/3.1.2.5
#
# The 'releases' folder holds all the available releases. During a deploy, a new folder should be created in the releases folder.
# The 'current' symlink points to one of the releases (usually, the latest one)
# The 'shared' folder holds any resource that is shared between releases.
#
# Base installation directory for MiaRecWeb app
miarecweb_install_dir: /opt/miarecweb


# Location for log files
# This could be the 'shared' folder, but recommended relocation is /var/log
# because usually /opt and /var are located on different disk partitions.
miarecweb_log_dir: /var/log/miarecweb


# -----------------------------
# Celery settings
# -----------------------------
miarecweb_celery_user: root
miarecweb_celery_group: '{{ miarec_bin_group }}'
miarecweb_celery_umask: "0002"
miarecweb_celery_pid_dir: /var/run/celery
miarecweb_celery_log_level: INFO
miarecweb_celery_log_dir: '{{ miarecweb_log_dir }}/celery'


# Download files location
miarecweb_download_base_url: "https://miarec-download.s3.amazonaws.com"
miarecweb_tarball_file: "miarecweb-{{ miarecweb_version }}.tar.gz"

# Directory where to download miarecweb files
miarecweb_download_dir: /tmp

# whether or not to delete the downloaded source code. By setting it
# to false and using a custom var for `miarecweb_download_dir` a kind of
# local caching can be achieved.
miarecweb_cleanup_downloads: true


# If true, the miarecweb files for the version will be downloaded and
# installed again even if it's found on the system.
# miarecweb_force_install: no

# Custom settings for "production.ini" file
# Example in YAML file:
#
#   miarecweb_custom_ini_setttings:
#     - section: "server:main"
#       option: "trusted_proxy"
#       value: "*"
#     - section: "server:main"
#       option: "trusted_proxy_headers"
#       value: "x-forwarded-for x-forwarded-host x-forwarded-proto x-forwarded-port"
#
# It can be defined in inventory file using the following construct:
#
#   [all:vars]
#   miarecweb_custom_ini_settings = [{ 'section': 'server:main', 'option': 'trusted_proxy', 'value': '*' }]
#
miarecweb_custom_ini_settings: []

# When provided, the trusted proxy (or multiple proxies) are added
# to Apache config file in "RemoteIPTrustedProxy" directive.
# Example:
#   miarecweb_trusted_proxy: 127.0.0.1
#
# Multiple values are supported:
#   miarecweb_trusted_proxy: 10.0.0.2 10.0.0.3
miarecweb_trusted_proxy: ""
