---

- name: "Add celery group '{{ miarecweb_celery_group }}' | Celerybeat"
  group:
    name: "{{ miarecweb_celery_group }}"
    state: present
  when: miarecweb_celery_group != 'root'


# -----------------------------
# Create user for celery daemon
# Important:
#   User should have access to shell otherwise the init.d startup script fails (i.e. shell: /bin/false will not work)
# -----------------------------
- name: "Add celery user '{{ miarecweb_celery_user }}' | Celerybeat"
  user:
    name: "{{ miarecweb_celery_user }}"
    group: "{{ miarecweb_celery_group }}"
    comment: "Celery Task Manager"
    shell: /bin/bash
    system: yes
  when: miarecweb_celery_user != 'root'

# Celery needs write permissions to the directory in order to allow purge of files.
# We assume that such directory is owned by "miarec" group
- name: Grant celery process an access to recordings directory
  user:
    name: "{{ miarecweb_celery_user }}"
    groups: "{{ miarec_bin_group }}"
    append: True
  when: miarecweb_celery_user != 'root' and miarecweb_celery_group != miarec_bin_group


- name: Create log directory for celery workers
  file:
    path: '{{ miarecweb_celery_log_dir }}'
    owner: '{{ miarecweb_celery_user }}'
    group: '{{ miarecweb_celery_group }}'
    state: directory


- name: Create PID directory for celery workers
  file:
    path: '{{ miarecweb_celery_pid_dir }}'
    owner: '{{ miarecweb_celery_user }}'
    group: '{{ miarecweb_celery_group }}'
    state: directory


- name: Create log directory for celery jobs
  file:
    path: '{{ miarecweb_log_dir }}/jobs'
    owner: '{{ miarecweb_celery_user }}'
    group: '{{ miarecweb_celery_group }}'
    state: directory


- name: Configure celery settings
  template:
    src: "etc_default_celeryd.j2"
    dest: "/etc/default/celeryd"
    owner: root
    group: root
    mode: 0644
  vars:
    miarecweb_root_dir: "{{ deploy_helper.current_path }}"
  notify: reload celeryd


- name: create systemd tmpfiles configuration
  template:
    src: etc_tmpfiles.d_celeryd.conf.j2
    dest: /etc/tmpfiles.d/celeryd.conf
    mode: 0644
  when:
    - ansible_service_mgr|default() == 'systemd'
    - miarecweb_celery_pid_dir.startswith('/var/run') or miarecweb_celery_pid_dir.startswith('/run')


- name: Install celery service | init.d
  template:
    src: "etc_init.d_celeryd.j2"
    dest: "/etc/init.d/celeryd"
    owner: root
    group: root
    mode: 0755
  vars:
    miarecweb_root_dir: "{{ deploy_helper.current_path }}"
  notify: 
    - start celeryd
  when: ansible_service_mgr|default() != "systemd"


- name: Remove /etc/init.d/celeryd | SystemD
  file:
    path: "/etc/init.d/celeryd"
    state: absent
  when: ansible_service_mgr == "systemd"


- name: Install celery service | SystemD
  template:
    src: "etc_systemd_system_celeryd.service.j2"
    dest: "/etc/systemd/system/celeryd.service"
    owner: root
    group: root
    mode: 0644
  vars:
    miarecweb_root_dir: "{{ deploy_helper.current_path }}"
  notify: 
    - reload celeryd
    - reload systemd
  when: ansible_service_mgr == "systemd"


- name: Enable celery service
  service: 
    name: celeryd 
    enabled: yes


- name: Configure logrotate | celery
  template:
    src: "etc_logrotate.d_celery.j2"
    dest: "/etc/logrotate.d/celery"
