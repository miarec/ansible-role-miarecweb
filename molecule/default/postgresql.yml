---
# Install and Configure PostgreSQL
- name: PostgreSQL | Install PostgreSQL | Debian
  when: ansible_os_family == "Debian"
  block:
    - name: Debian - Update apt cache
      apt:
        update_cache: true
        cache_valid_time: 600
      changed_when: false
      when: ansible_os_family == "Debian"

    - name: PostgreSQL | Install PostgreSQL packages | Debian
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - postgresql
        - postgresql-contrib

    - name: PostgreSQL | Start PostgreSQL service | Debian
      service:
        name: postgresql
        state: started


- name: PostgreSQL | Install PostgreSQL | RedHat
  when: ansible_os_family == "RedHat"
  block:

    - name: PostgreSQL | Install the PostgreSQL repository | RedHat
      yum:
        name: https://download.postgresql.org/pub/repos/yum/reporpms/EL-{{ ansible_distribution_major_version  }}-x86_64/pgdg-redhat-repo-latest.noarch.rpm
        state: present
        disable_gpg_check: true

    - name: PostgreSQL | Disable PostgreSQL module | RedHat
      command: dnf module disable postgresql -y
      failed_when: false
      when: ansible_distribution_major_version >= '8'

    - name: PostgreSQL | Install PostgreSQL packages | RedHat
      yum:
        name: "{{ item }}"
        state: present
      with_items:
        - postgresql12-server
        - postgresql12-contrib
      register: _postrgesql_yum_install

    - name: PostgreSQL | Inititialize the database | RedHat
      shell: /usr/pgsql-12/bin/postgresql-12-setup initdb
      when: _postrgesql_yum_install.changed

    - name: PostgreSQL | Modify pg_hba.conf file | RedHat
      copy:
        content: |
          # set permissions to access databases
          local all all peer
          host miarecdb miarec 127.0.0.1/32 md5
        dest: /var/lib/pgsql/12/data/pg_hba.conf

    - name: PostgreSQL | Start PostgreSQL service | RedHat
      service:
        name: postgresql-12
        state: started


# ansible_python_interpreter: /usr/local/bin/python3.11    # Use Python3 install on previous step
# Centos7 does not have python3 installed, Ansible will use system python, 2.7
# ther is no psycopg2-binary package for python2.7
# so for this step we have to instruct ansible to user python3 compiled in previous step
# ansible_python_interpreter: "{{ python3_bin_location }}"
# - set_fact:
#     compiled_python3_bin: "/usr/local/bin/python{{ '.'.join(python_version.split('.')[:2]) }}"
#   # when: ansible_distribution == "CentOS"
#   when:
#     - ansible_os_family == "RedHat"
#     - ansible_distribution_major_version <= '8'

# - set_fact:
#     compiled_python3_bin: "/usr/local/bin/python{{ '.'.join(python_version.split('.')[:2]) }}"
#   when: ansible_distribution == "Rocky"

- name: PostgreSQL | Configure PostgreSQL
  vars:
    # ansible_python_interpreter: "{{ compiled_python3_bin is 'compiled_python3_bin' in vars else '/usr/bin/python3'}}"
    # ansible_python_interpreter: "{{ compiled_python3_bin if 'compiled_python3_bin' in vars else '/usr/bin/python3' }}"
    ansible_shell_allow_world_readable_temp: true
  block:

    # - debug: var=ansible_python_interpreter

    # # make sure this is needed on Centos  // also RHEL9
    # - name: Install pip
    #   package:
    #     name: python-pip
    #     state: present
    #   # when: ansible_distribution == "CentOS"

    # - name: Install psycopg2 for ansible to be able to create postgresql users
    #   pip:
    #     name: psycopg2-binary
    #     state: present


    - name: PostgreSQL | Create user
      command: psql -c "CREATE USER miarec WITH PASSWORD 'password' ;"
      become: true
      become_user: "postgres"

    - name: PostgreSQL | Create Database
      command: psql -c "CREATE DATABASE miarecdb OWNER miarec;"
      become: true
      become_user: "postgres"

    - name: PostgreSQL | Create Extentions
      command: "psql -d miarecdb -c 'CREATE EXTENSION IF NOT EXISTS \"{{ item }}\" ;'"
      become: true
      become_user: "postgres"
      with_items:
        - hstore
        - uuid-ossp
        - pg_stat_statements

    # - name: Create PostgreSQL user
    #   postgresql_user:
    #     name: "miarec"
    #     password: "password"
    #     state: present
    #     port: 5432
    #   become: true
    #   become_user: "postgres"


    # - name: Create PostgreSQL database
    #   postgresql_db:
    #     name: "miarecdb"
    #     owner: "miarec"
    #     state: present
    #   become: true
    #   become_user: "postgres"

    # This might not be needed.....
    # - name: Update user permissions for PostgreSQL User
    #   postgresql_user:
    #     name: "miarec"
    #     db: "miarecdb"
    #   become: true
    #   become_user: "postgres"

    # - name: Install PostgreSQL Database Extensions
    #   postgresql_ext:
    #     name: "{{ item }}"
    #     db: "miarecdb"
    #     state: present
    #   become: true
    #   become_user: "postgres"
    #   with_items:
    #     - hstore
    #     - uuid-ossp
    #     - pg_stat_statements
