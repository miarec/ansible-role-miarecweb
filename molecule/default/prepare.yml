---
- name: Prepare
  hosts: all
  become: true

  pre_tasks:
    # Setup PostgreSQL Database and User
    - name: Debian - Install PostgreSQL
      block:
        - name: Debian - Update apt cache
          apt:
            update_cache: true
            cache_valid_time: 600
          changed_when: false
          when: ansible_os_family == "Debian"

        - name: Debian - Install PostgreSQL packages
          apt:
            name: "{{ item }}"
            state: present
          with_items:
            - postgresql
            - postgresql-contrib

        - name: Debian - Start PostgreSQL service
          service:
            name: postgresql
            state: started
          become: true

      when: ansible_os_family == "Debian"

    - name: CentOS 7 - Install PostgreSQL
      block:
        - name: CentOS 7 - Install the PostgreSQL repository
          yum:
            name: https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm
            state: present

        - name: CentOS 7 - Install PostgreSQL packages
          yum:
            name: "{{ item }}"
            state: present
          with_items:
            - postgresql12-server
            - postgresql12-contrib
          register: _postrgesql_yum_install

        - name: CentOS 7 - Inititialize the database
          shell: /usr/pgsql-12/bin/postgresql-12-setup initdb
          when: _postrgesql_yum_install.changed

        - name: CentOS 7 - Modify pg_hba.conf file
          copy:
            content: |
              # set permissions to access databases
              local all all peer
              host miarecdb miarec 127.0.0.1/32 md5
            dest: /var/lib/pgsql/12/data/pg_hba.conf

        - name: CentOS 7 - Start PostgreSQL service
          service:
            name: postgresql-12
            state: started
          become: true

      when: ansible_distribution == "CentOS"

    - name: Configure PostgreSQL
      block:
        - name: Install psycopg2 for ansible to be able to create postgresql users
          become: true
          pip:
            name: psycopg2-binary

        - name: Create PostgreSQL user
          postgresql_user:
            name: "miarec"
            password: "password"
            state: present
            port: 5432
          become: true
          become_user: "postgres"

        - name: Create PostgreSQL database
          postgresql_db:
            name: "miarecdb"
            owner: "miarec"
            state: present
          become: true
          become_user: "postgres"

        # This might not be needed.....
        - name: Update user permissions for PostgreSQL User
          postgresql_user:
            name: "miarec"
            db: "miarecdb"
          become: true
          become_user: "postgres"

        - name: Install PostgreSQL Database Extensions
          postgresql_ext:
            name: "{{ item }}"
            db: "miarecdb"
            state: present
          become: true
          become_user: "postgres"
          with_items:
            - hstore
            - uuid-ossp
            - pg_stat_statements

    # Install Apache
    - name: Debian - Install and Configure Apache
      block:
        - name: Debian - Install Apache package
          become: true
          apt:
            name: "{{ item }}"
            state: present
            update_cache: true
          with_items:
            - apache2

        - name: Debian - Enable a2enmod rewrite module
          shell: "a2enmod rewrite"
          become: true

        - name: Debian - Restart Apache service
          service:
            name: apache2
            state: restarted
            enabled: true
          become: true

      when: ansible_os_family == "Debian"

    - name: CentOS 7 - Install and Configure Apache
      block:
        - name: CentOS 7 - Install Apache
          become: true
          yum:
            name: "{{ item }}"
            state: present
          with_items:
            - httpd

        - name: Restart and Enable Apache service
          service:
            name: httpd
            state: started
            enabled: true
          become: true

      when: ansible_distribution == "CentOS"

    # Install python from package
    - name: Debian - Install Python 3.8 from package
      block:
        - name: Debian - Install python3.8 dependencies
          apt:
            name: "{{ item }}"
            state: present
            update_cache: true
          with_items:
            - gpg-agent

        - name: Debian - Install deadsnakes repository
          apt_repository:
            validate_certs: false
            repo: ppa:deadsnakes/ppa
            state: present
          become: true

        - name: Debian - Install Python3.8 packages
          apt:
            name: "{{ item }}"
            state: present
            update_cache: true
          with_items:
            - python3.8
            - python3.8-dev
            - python3.8-venv

      when: ansible_os_family == "Debian"

    - name: CentOS 7 - Install Python 3.6 from package - RPM
      block:

        - name: CentOS 7 - Install Python3.8 dependencies
          yum:
            name: "{{ item }}"
            state: present
          with_items:
            - centos-release-scl-rh

        - name: CentOS 7 - Install Python3.8 packages
          yum:
            name: "{{ item }}"
            state: present
          with_items:
            - rh-python38-python
            - rh-python38-python-devel

        - name: set link
          file:
            src: /opt/rh/rh-python38/root/usr/bin/python3.8
            dest: /usr/bin/python3.8
            state: link

      when: ansible_distribution == "CentOS"
